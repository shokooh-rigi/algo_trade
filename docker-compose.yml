version: '3.8'

services:
  redis:
    image: redis:7-alpine # Using a lightweight Redis image
    ports:
      - "6379:6379" # Map container port 6379 to host port 6379
    volumes:
      - redis_data:/data # Persist Redis data
    networks:
      - my_celery_network # Custom network for Celery components

  celery_worker:
    build: . # Build from your current Django project directory
    command: celery -A algo_trade worker -l info # Command to start the Celery worker
    volumes:
      - .:/app # Mount your Django project into the container
    environment:
      - DJANGO_SETTINGS_MODULE=algo_trade.settings
      - CELERY_BROKER_URL=redis://redis:6379/0 # Connect to the Redis service by its name
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis # Ensure Redis starts before the worker
    networks:
      - my_celery_network

  celery_beat:
    build: . # Build from your current Django project directory
    command: celery -A algo_trade beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=algo_trade.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
       - DATABASE_NAME=algo_db # Matches os.getenv('DATABASE_NAME', 'algo_db')
      - DATABASE_USER=root # Matches os.getenv('DATABASE_USER', 'postgres')
      - DATABASE_PASSWORD=shokooh # Matches os.getenv('DATABASE_PASSWORD', 'your_password')
      - DATABASE_HOST=host.docker.internal # For Docker Desktop to reach localhost PostgreSQL
      - DATABASE_PORT=5432 # Matches os.getenv('DATABASE_PORT', 5432)
    depends_on:
      - redis
    networks:
      - my_celery_network

  flower:
    build: . # Build from your current Django project directory
    command: celery -A algo_trade flower --broker=redis://redis:6379/0 --port=5555
    ports:
      - "5555:5555" # Map Flower's port to your host
    environment:
      - DJANGO_SETTINGS_MODULE=algo_trade.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - celery_worker # Flower needs workers to monitor
    networks:
      - my_celery_network

volumes:
  redis_data: # Define a named volume for Redis data persistence

networks:
  my_celery_network: # Define a custom network for inter-container communication
    driver: bridge
